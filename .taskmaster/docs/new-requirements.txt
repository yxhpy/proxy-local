# 新功能需求文档 (New Requirements PRD)

## 需求 1: Cloudflare DNS 记录智能更新
**优先级**: High

### 功能描述
当使用 Cloudflare 提供商时，如果 DNS 记录已经存在，系统应该自动检测并更新现有记录，而不是尝试创建新记录。

### 详细需求
- 检查 Cloudflare DNS 记录是否已存在
- 如果存在，更新现有记录的配置（如 IP 地址、端口等）
- 如果不存在，创建新的 DNS 记录
- 提供清晰的用户反馈，说明是创建还是更新了记录
- 处理更新失败的情况，提供适当的错误信息

### 技术要求
- 使用 Cloudflare API 查询现有 DNS 记录
- 实现记录对比逻辑，判断是否需要更新
- 确保更新操作的原子性和错误恢复

---

## 需求 2: 代理进程后台化与管理
**优先级**: High

### 功能描述
所有代理连接成功建立后，应该转为后台运行，并提供完整的进程管理功能，包括列表查询和交互式终止操作。

### 详细需求
#### 2.1 后台进程管理
- 代理连接建立成功后自动转为后台运行
- 保存运行中代理的进程信息（PID、端口、提供商、URL 等）
- 实现进程状态监控和健康检查

#### 2.2 列表查询功能
- 显示所有运行中的代理连接
- 显示每个代理的详细信息：
  - 进程 ID (PID)
  - 本地端口
  - 远程 URL
  - 提供商名称
  - 运行状态
  - 启动时间
  - 流量统计（如果可用）

#### 2.3 交互式管理界面
- 实现上下键选择代理进程
- 支持多选操作
- 提供终止 (kill) 操作确认
- 支持批量操作
- 实现实时状态更新

#### 2.4 命令行接口
- `uvx-proxy-local list` - 显示所有运行中的代理
- `uvx-proxy-local kill` - 启动交互式终止界面
- `uvx-proxy-local kill <pid>` - 直接终止指定进程
- `uvx-proxy-local status` - 显示详细状态信息

### 技术要求
- 使用进程管理库处理后台进程
- 实现进程信息持久化存储
- 使用 inquirer 等库实现交互式界面
- 确保进程终止的优雅处理
- 实现进程状态的实时监控

---

## 验收标准

### 需求 1 验收标准
- [ ] 能够正确检测现有 Cloudflare DNS 记录
- [ ] 能够更新现有记录而不是创建重复记录
- [ ] 提供清晰的操作反馈（创建 vs 更新）
- [ ] 处理各种错误情况（权限、网络等）
- [ ] 通过单元测试和集成测试

### 需求 2 验收标准
- [ ] 代理成功建立后能自动转为后台运行
- [ ] `list` 命令能显示所有运行中代理的完整信息
- [ ] 交互式管理界面能正常工作，支持上下键选择
- [ ] 能够正确终止选定的代理进程
- [ ] 支持批量操作和多选
- [ ] 进程状态能实时更新
- [ ] 命令行接口完整且易用
- [ ] 通过端到端测试验证